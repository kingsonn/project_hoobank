import styles from "../style";
import { discount, robot } from "../assets";
import GetStarted from "./GetStarted";
import { Canvas , useFrame} from '@react-three/fiber'
import { Loader, useGLTF, OrbitControls, PerspectiveCamera, Stars, Preload , Html, Environment, ContactShadows} from '@react-three/drei'
import React, { Suspense, useRef,  useState } from 'react'
import wom from "../assets/wom.png"
import CanvasLoader from "../Loader";
import * as THREE from 'three'
import { motion } from "framer-motion";
import { EarthCanvas } from "./canvas";
// import { SectionWrapper } from "../hoc";
import { slideIn } from "../utils/motion";

// function Model({ url }) {
//   const { nodes } = useGLTF(url)
//   return (
//     <group rotation={[-Math.PI / 2, 0, 0]} position={[0, -4, 0]} scale={6.5}>
//       <group rotation={[Math.PI / 13.5, -Math.PI / 5.8, Math.PI / 5.6]}>
//         <mesh receiveShadow castShadow geometry={nodes.planet002.geometry} material={nodes.planet002.material} />
//         <mesh geometry={nodes.planet003.geometry} material={nodes.planet003.material} />
//       </group>
//     </group>
//   )
// }
// function Model(props) {
//   const group = useRef()
//   // Load model
//   const { nodes, materials } = useGLTF('/mac-draco.glb')
//   // Make it float
//   useFrame((state) => {
//     const t = state.clock.getElapsedTime()
//     group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
//     group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
//     group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1)
//     group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1)
//   })
//   // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
//   return (
//     <group scale={1.15} ref={group} {...props} dispose={null}>
//       <group rotation-x={-0.425} position={[0, -0.04, 0.41]}>
//         <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
//           <mesh material={materials.aluminium} geometry={nodes['Cube008'].geometry} />
//           <mesh material={materials['matte.001']} geometry={nodes['Cube008_1'].geometry} />
//           <mesh geometry={nodes['Cube008_2'].geometry}>
//             {/* Drei's HTML component can "hide behind" canvas geometry */}
//             <Html className="content" rotation-x={-Math.PI / 2} position={[0, 0.05, -0.09]} transform occlude>
//               <div className="wrapper" onPointerDown={(e) => e.stopPropagation()}>
//               <>
//               <div className="mx-auto max-w-7xl w-full pt-16 pb-20 text-center">
//           <div className="px-4 px-8">
//             <h1 className="text-4xl tracking-tight font-extrabold text-gray-900 text-5xl">
//               <span className="block">Data to enrich your</span> <span className="block text-indigo-600">online business</span>
//             </h1>
//             <p className="mt-3 max-w-md mx-auto text-lg text-gray-500 text-xl">
//               Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui lorem cupidatat commodo. Elit sunt amet fugiat veniam
//               occaecat fugiat aliqua.
//             </p>
//             <div className="mt-10 flex justify-center">
//               <div className="mt-3 rounded-md shadow mt-0 ml-3">
//                 <a
//                   href="#"
//                   className="w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
//                   Get started
//                 </a>
//               </div>
//               <div className="mt-3 rounded-md shadow mt-0 ml-3">
//                 <a
//                   href="#"
//                   className="w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-600 bg-white hover:bg-gray-50">
//                   Live demo
//                 </a>
//               </div>
//             </div>
//           </div>
//         </div>
//         <div className="relative w-full h-64 h-72">
//           <img
//             className="absolute inset-0 w-full h-full object-cover"
//             src="https://images.unsplash.com/photo-1520333789090-1afc82db536a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2102&q=80"
//             alt=""
//           />
//         </div>
//               </>

//               </div>
//             </Html>
//           </mesh>
//         </group>
//       </group>
//       <mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} />
//       <group position={[0, -0.1, 3.39]}>
//         <mesh material={materials.aluminium} geometry={nodes['Cube002'].geometry} />
//         <mesh material={materials.trackpad} geometry={nodes['Cube002_1'].geometry} />
//       </group>
//       <mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} />
//     </group>
//   )
// }
const Hero = () => {
  return (
    <section id="home" className={`flex md:flex-row flex-col ${styles.paddingY}`}>
      <div className={`flex-1 ${styles.flexStart} flex-col xl:px-0 sm:px-16 px-6`}>
        <div className="flex flex-row items-center py-[6px] px-4 bg-discount-gradient rounded-[10px] mb-2">
          <img src={discount} alt="discount" className="w-[32px] h-[32px]" />
          <p className={`${styles.paragraph} ml-2`}>
            <span className="text-white">Affordable Services </span> &{" "}
            <span className="text-white">Quick Delivery</span>
          </p>
        </div>

        <div className="flex flex-row justify-between items-center w-full">
          <h1 className="flex-1 font-poppins font-semibold ss:text-[72px] text-[52px] text-white ss:leading-[100.8px] leading-[75px]">
            Elevate Your <br className="sm:block hidden" />{" "}
            <span className="text-gradient">Digital Presence</span>{" "}
          </h1>
        
        </div>

        <h1 className="font-poppins font-semibold ss:text-[68px] text-[52px] text-white ss:leading-[100.8px] leading-[75px] w-full">
          With Next-Gen Soutions
        </h1>
        <p className={`${styles.paragraph} max-w-[470px] mt-5`}>
        Stunning Websites for Individuals and Businesses, Powerful Analytics and Data Driven Insights, and Expert Code Editing & Enhancement â€“ All in One Place!
        </p>
      </div>

      <div className={`flex-1 flex ${styles.flexCenter} md:my-0 my-10 m-3 relative`}>
      {/* <Canvas className="bg" dpr={[1.5, 2]} linear shadows>
        <fog attach="fog" args={['#272730', 16, 30]} />
        <ambientLight intensity={2.75} />
        <PerspectiveCamera makeDefault position={[0, 0, 16]} fov={75}>
          <pointLight intensity={1} position={[-10, -25, -10]} />
          <spotLight castShadow intensity={2.25} angle={0.2} penumbra={1} position={[-25, 20, -15]} shadow-mapSize={[1024, 1024]} shadow-bias={-0.0001} />
        </PerspectiveCamera>
        <Suspense fallback={null}>
          <Model url="/scene.glb" />
        </Suspense>
        <OrbitControls autoRotate enablePan={false} enableZoom={false} maxPolarAngle={Math.PI / 2} minPolarAngle={Math.PI / 2} />
        <Stars radius={500} depth={50} count={1000} factor={10} />
      </Canvas>
      <div className="layer" />
      <Loader /> */}
 {/* <Canvas
      shadows
      frameloop='demand'
      dpr={[1, 2]}
      gl={{ preserveDrawingBuffer: true }}
      camera={{
        fov: 45,
        near: 0.1,
        far: 200,
        position: [-4, 3, 6],
      }}
      >
      <Suspense fallback={<CanvasLoader />}>
      <OrbitControls
      autoRotate
      enableZoom={false}
      maxPolarAngle={Math.PI / 2}
      minPolarAngle={Math.PI / 2}
      />
      <Earth />
      
      <Preload all />
      </Suspense>
    </Canvas>
     */}
   
        <EarthCanvas />
  
       {/* <Canvas camera={{ position: [-5, 0, -15], fov: 55 }}>
      <pointLight position={[10, 10, 10]} intensity={1.5} />
      <Suspense fallback={null}>
        <group rotation={[0, Math.PI, 0]} position={[0, 1, 0]}>
          <Model />
        </group>
        <Environment preset="city" />
      </Suspense>
      <ContactShadows position={[0, -4.5, 0]} scale={20} blur={2} far={4.5} />
      <OrbitControls enablePan={false} enableZoom={false} minPolarAngle={Math.PI / 2.2} maxPolarAngle={Math.PI / 2.2} />
    </Canvas> */}
    
    {/* <img src={wom} alt="billing" className="w-[100%] h-[100%] relative z-[5]" /> */}
   
        {/* gradient start */}
        <div className="absolute z-[0] w-[40%] h-[35%] top-0 pink__gradient" />
        <div className="absolute z-[1] w-[80%] h-[80%] rounded-full white__gradient bottom-40" />
        <div className="absolute z-[0] w-[50%] h-[50%] right-20 bottom-20 blue__gradient" />
        {/* gradient end */}
      </div>

     
    </section>
  );
};

export default Hero;
